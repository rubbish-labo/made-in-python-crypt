def gcd_binary_euclid(a,b):
    g = 1
    while a>0:
        if a%2==0 and b%2==0:
            a = int(a/2)
            b = int(b/2)
            g =2*g
        
        elif a%2==0 and b%2!=0:
            a = int(a/2)
        
        elif a%2!=0 and b%2==0:
            b = int(b/2)
        
        elif a%2!=0 and b%2!=0:
            if a>=b:
                a = abs(a-b)/2
            else:
                b = abs(a-b)/2
    
    return g*b

def gcd_binary_euclid_2(a,b):
    g = 0
    while a>0:
        if a%2==0 and b%2==0:
            a = int(a/2)
            b = int(b/2)
            g +=2
        
        elif a%2==0 and b%2!=0:
            a = int(a/2)
        
        elif a%2!=0 and b%2==0:
            b = int(b/2)
        
        elif a%2!=0 and b%2!=0:
            t = abs(a-b)/2
            if a>=b:
                a = t
            else:
                b = t
    
    return g*b
        
